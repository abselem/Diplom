# Generated by Django 4.1.7 on 2023-03-26 17:51

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('title', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('logo', models.ImageField(upload_to='images/bank_logo/')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('sum', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('call_center_phone1', models.CharField(max_length=20)),
                ('call_center_phone2', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('additional_info', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('card_num', models.CharField(max_length=16, unique=True)),
                ('expiration_date', models.CharField(max_length=5)),
                ('cvv', models.CharField(max_length=3)),
                ('bik', models.CharField(max_length=9)),
                ('iban', models.CharField(max_length=34)),
                ('sum', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Citizen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iin', models.CharField(max_length=12, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(max_length=255)),
                ('date_of_birth', models.DateField()),
                ('phone', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('id_num', models.CharField(max_length=10)),
                ('id_issue_date', models.DateField()),
                ('id_issuer', models.CharField(max_length=255)),
                ('person_picture', models.ImageField(upload_to='citizens/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CreditKinds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('percent', models.FloatField()),
                ('deposit', models.BooleanField()),
                ('max_sum', models.IntegerField()),
                ('max_year', models.IntegerField()),
                ('make_a_decision', models.CharField(max_length=100)),
                ('additional_info', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dollar_buy', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('ruble_buy', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('euro_buy', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('dollar_sell', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('ruble_sell', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('euro_sell', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Deposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True)),
                ('iin', models.CharField(max_length=12)),
                ('cvv', models.CharField(max_length=3)),
                ('bik', models.CharField(max_length=9)),
                ('iban', models.CharField(max_length=34)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DepositKinds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('percent', models.FloatField()),
                ('take_off', models.BooleanField()),
                ('min_sum', models.IntegerField()),
                ('min_year', models.IntegerField()),
                ('max_year', models.IntegerField()),
                ('additional_info', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PaymentKinds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='images/payment/')),
                ('first_num', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DepositTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('message', models.CharField(max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient_deposit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_received', to='bank_info.deposit')),
                ('sender_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_sent', to='bank_info.card')),
            ],
        ),
        migrations.AddField(
            model_name='deposit',
            name='deposit_kind',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bank_info.depositkinds'),
        ),
        migrations.CreateModel(
            name='CardTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('message', models.CharField(max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_received', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_sent', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CardKinds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('bonus', models.IntegerField()),
                ('pict', models.ImageField(upload_to='images/cards/')),
                ('additional_info', models.TextField()),
                ('payment_sys', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bank_info.paymentkinds')),
            ],
        ),
        migrations.AddField(
            model_name='card',
            name='kind',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bank_info.cardkinds'),
        ),
        migrations.AddField(
            model_name='user',
            name='iin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank_info.citizen'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
